Creational Patterns
These patterns deal with object creation mechanisms, trying to create objects in a manner suitable to the situation.

Singleton: Ensures that a class has only one instance and provides a global point of access to it.

Example: Database connections.
Factory Method: Defines an interface for creating an object but lets subclasses alter the type of objects that will be created.

Example: GUI libraries where each OS has a different implementation of buttons or dialogs.
Abstract Factory: Provides an interface for creating families of related or dependent objects without specifying their concrete classes.

Example: Creating different sets of user interface components for different platforms (Windows, macOS, etc.).
Builder: Separates the construction of a complex object from its representation so that the same construction process can create different representations.

Example: Building a complex document with multiple sections and formats.
Prototype: Creates new objects by copying an existing object, known as the prototype.

Example: Cloneable objects in a game (e.g., duplicating a character).